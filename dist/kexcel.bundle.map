{"version":3,"sources":["webpack:///kexcel.bundle.js","webpack:///webpack/bootstrap 83b325e2d71b773ff134","webpack:///./ts/Workbook.ts","webpack:///external \"fs\"","webpack:///external \"bluebird\"","webpack:///./~/path-browserify/index.js","webpack:///./~/process/browser.js","webpack:///external \"lodash\"","webpack:///external \"rimraf\"","webpack:///external \"unzip\"","webpack:///external \"temp\"","webpack:///external \"fstream\"","webpack:///external \"archiver\"","webpack:///./ts/Sheet.ts","webpack:///./ts/Util.ts","webpack:///external \"xml2js\"","webpack:///./ts/Saveable.ts","webpack:///./ts/XMLFile.ts","webpack:///./ts/SharedStrings.ts"],"names":["module","exports","modules","installedModules","__webpack_require__","moduleId","id","loaded","call","m","c","p","__dirname","fs","Promise","path","_","rimraf","unzip","mkTempDir","promisify","mkdir","fstream","archiver","Sheet_1","XMLFile_1","SharedStrings_1","Workbook","input","this","files","sheets","filename","source","createReadStream","new","open","join","workbook","init","prototype","_this","extract","then","autoload","map","filepath","xmlfile","XMLFile","tempDir","load","all","emptySheet","initSharedStrings","initSheets","thenReturn","sharedStrings","SharedStrings","wbxml","getXML","relxml","sheet","sheetXml","r","find","Relationships","Relationship","rel","$","Id","Sheet","push","existsSync","reject","resolve","parser","Parse","writer","Writer","outstream","pipe","on","error","filePath","xml","createSheet","name","create","undefined","setName","getSheet","getName","destination","options","archive","file","save","sync","bulk","expand","cwd","src","data","date","Date","finalize","require","process","normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","splitPathRe","splitPath","exec","slice","resolvedPath","resolvedAbsolute","arguments","TypeError","charAt","filter","split","normalize","isAbsolute","trailingSlash","substr","paths","Array","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","concat","sep","delimiter","dirname","result","root","dir","basename","ext","f","extname","xs","res","str","len","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","run","nextTick","args","Item","array","apply","title","browser","env","argv","version","versions","noop","addListener","once","off","removeListener","removeAllListeners","emit","binding","chdir","umask","__extends","d","b","hasOwnProperty","__","constructor","Object","Util","Saveable_1","_super","workbookXml","relationshipXml","Target","loadXML","addRelationship","addContentType","addToWorkbook","cloneDeep","copyFrom","worksheet","sheetViews","setCellValue","rownum_or_ref","colnum","cellvalue","copyCellStyle","cell","getCell","value","matches","match","refRegex","rownum","parseInt","row","getRowXML","indexOf","setValue","s","v","replace","getIndex","t","getCellValue","getString","getCellFunction","func","cellId","intToExcelColumn","sort","a","excelColumnToInt","getRow","forEach","setRow","values","compact","appendRow","getLastRowNumber","sheetData","rows","row1","row2","toJSON","keys","zipObject","relationships","Type","contentTypes","Types","Override","PartName","ContentType","sheetId","r:id","col","mod","String","fromCharCode","floor","ref","number","pow","charCodeAt","Saveable","xml2js","parseString","readFile","writeFile","builder","Builder","parseXML","buffer","toString","saveXML","xmlobj","contents","buildObject","cache","catch","finally","sst","si","storeString","n","sxml"],"mappings":"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","file":"kexcel.bundle.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(__dirname) {\"use strict\";\n\tvar fs = __webpack_require__(1);\n\tvar Promise = __webpack_require__(2);\n\tvar path = __webpack_require__(3);\n\tvar _ = __webpack_require__(5);\n\tvar rimraf = __webpack_require__(6);\n\tvar unzip = __webpack_require__(7);\n\tvar mkTempDir = Promise.promisify(__webpack_require__(8).mkdir);\n\tvar fstream = __webpack_require__(9);\n\tvar archiver = __webpack_require__(10);\n\tvar Sheet_1 = __webpack_require__(11);\n\tvar XMLFile_1 = __webpack_require__(15);\n\tvar SharedStrings_1 = __webpack_require__(16);\n\t/**\n\t * Main class for KExcel. Use .new() and .open(file | stream) to open an .xlsx file.\n\t */\n\tvar Workbook = (function () {\n\t    function Workbook(input) {\n\t        /**\n\t         * Dictionary which holds pointers to files.\n\t         * @type {{}}\n\t         */\n\t        this.files = {};\n\t        /**\n\t         * The array of sheets in this workbook.\n\t         * @type {Array}\n\t         */\n\t        this.sheets = [];\n\t        if (typeof input == 'string') {\n\t            this.filename = input;\n\t            this.source = fs.createReadStream(input);\n\t        }\n\t        else {\n\t            this.source = input;\n\t        }\n\t    }\n\t    /**\n\t     * Creates an empty workbook\n\t     * @returns {Promise<Workbook>}\n\t     */\n\t    Workbook.new = function () {\n\t        return Workbook.open(path.join(__dirname, '..', 'templates', 'empty.xlsx'));\n\t    };\n\t    /**\n\t     * Opens an existing .xlsx file\n\t     * @param input\n\t     * @returns {Promise<Workbook>}\n\t     */\n\t    Workbook.open = function (input) {\n\t        var workbook = new Workbook(input);\n\t        return workbook.init();\n\t    };\n\t    Workbook.prototype.init = function () {\n\t        var _this = this;\n\t        return this.extract().then(function () {\n\t            var p = Workbook.autoload.map(function (filepath) {\n\t                var xmlfile = new XMLFile_1.XMLFile(path.join(_this.tempDir, filepath));\n\t                _this.files[filepath] = xmlfile;\n\t                return xmlfile.load();\n\t            });\n\t            return Promise.all(p);\n\t        }).then(function () {\n\t            _this.emptySheet = new XMLFile_1.XMLFile(path.join(__dirname, '..', 'templates', 'emptysheet.xml'));\n\t            return _this.emptySheet.load();\n\t        }).then(function () {\n\t            return Promise.all([_this.initSharedStrings(), _this.initSheets()]);\n\t        }).thenReturn(this);\n\t    };\n\t    Workbook.prototype.initSharedStrings = function () {\n\t        this.sharedStrings = new SharedStrings_1.SharedStrings(path.join(this.tempDir, 'xl', 'sharedStrings.xml'), this);\n\t        return this.sharedStrings.load();\n\t    };\n\t    Workbook.prototype.initSheets = function () {\n\t        var _this = this;\n\t        var wbxml = this.getXML('xl/workbook.xml');\n\t        var relxml = this.getXML('xl/_rels/workbook.xml.rels');\n\t        var p = _.map(wbxml.workbook.sheets[0].sheet, function (sheetXml) {\n\t            var r = _.find(relxml.Relationships.Relationship, function (rel) {\n\t                return rel.$.Id == sheetXml.$['r:id'];\n\t            });\n\t            var sheet = new Sheet_1.Sheet(_this, sheetXml, r);\n\t            _this.files[sheet.filename] = sheet;\n\t            _this.sheets.push(sheet);\n\t            return sheet.load();\n\t        });\n\t        return Promise.all(p);\n\t    };\n\t    Workbook.prototype.extract = function () {\n\t        var _this = this;\n\t        if (this.filename && !fs.existsSync(this.filename))\n\t            return Promise.reject(this.filename + ' not found.');\n\t        return mkTempDir('xlsx').then(function (tempDir) {\n\t            _this.tempDir = tempDir;\n\t            return new Promise(function (resolve, reject) {\n\t                var parser = unzip.Parse();\n\t                var writer = fstream.Writer(tempDir);\n\t                var outstream = _this.source.pipe(parser).pipe(writer);\n\t                outstream.on('close', function () {\n\t                    resolve(_this);\n\t                });\n\t                parser.on('error', function (error) {\n\t                    reject(error);\n\t                });\n\t            });\n\t        });\n\t    };\n\t    /**\n\t     * Returns the xml object for the requested file\n\t     * @param filePath\n\t     * @returns {any}\n\t     */\n\t    Workbook.prototype.getXML = function (filePath) {\n\t        return this.files[filePath].xml;\n\t    };\n\t    /**\n\t     * Creates a new sheet in the workbook\n\t     * @param name Optionally set the name of the sheet\n\t     * @returns {Sheet}\n\t     */\n\t    Workbook.prototype.createSheet = function (name) {\n\t        var sheet = new Sheet_1.Sheet(this);\n\t        sheet.create();\n\t        this.sheets.push(sheet);\n\t        this.files[sheet.filename] = sheet;\n\t        if (name != undefined) {\n\t            sheet.setName(name);\n\t        }\n\t        return sheet;\n\t    };\n\t    Workbook.prototype.getSheet = function (input) {\n\t        if (typeof input == 'number')\n\t            return this.sheets[input];\n\t        return _.find(this.sheets, function (sheet) {\n\t            return sheet.getName() == input;\n\t        });\n\t    };\n\t    Workbook.prototype.pipe = function (destination, options) {\n\t        var _this = this;\n\t        var archive = archiver('zip');\n\t        Promise.all(_.map(this.files, function (file) {\n\t            return file.save();\n\t        })).then(function () {\n\t            return _this.sharedStrings.save();\n\t        }).then(function () {\n\t            archive.on('finish', function () {\n\t                // Async version somehow doesn't work?\n\t                /*rimraf(this.tempDir, function(error){\n\t                 console.log('errr');\n\t                 console.log(error);\n\t                 });*/\n\t                rimraf.sync(_this.tempDir);\n\t            });\n\t            archive.pipe(destination, options);\n\t            archive.bulk([\n\t                { expand: true, cwd: _this.tempDir, src: ['**', '_rels/.rels'], data: { date: new Date() } }\n\t            ]);\n\t            archive.finalize();\n\t        });\n\t        return archive;\n\t    };\n\t    /**\n\t     * These files are automatically loaded into files[]\n\t     * @type {string[]}\n\t     */\n\t    Workbook.autoload = [\n\t        'xl/workbook.xml',\n\t        'xl/_rels/workbook.xml.rels',\n\t        '[Content_Types].xml'\n\t    ];\n\t    return Workbook;\n\t}());\n\texports.Workbook = Workbook;\n\tmodule.exports = {\n\t    Workbook: Workbook,\n\t    open: Workbook.open,\n\t    'new': Workbook.new\n\t};\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, \"ts\"))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fs\");\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"bluebird\");\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.\n\t//\n\t// Permission is hereby granted, free of charge, to any person obtaining a\n\t// copy of this software and associated documentation files (the\n\t// \"Software\"), to deal in the Software without restriction, including\n\t// without limitation the rights to use, copy, modify, merge, publish,\n\t// distribute, sublicense, and/or sell copies of the Software, and to permit\n\t// persons to whom the Software is furnished to do so, subject to the\n\t// following conditions:\n\t//\n\t// The above copyright notice and this permission notice shall be included\n\t// in all copies or substantial portions of the Software.\n\t//\n\t// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n\t// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n\t// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n\t// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n\t// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n\t// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n\t// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\t\n\t// resolves . and .. elements in a path array with directory names there\n\t// must be no slashes, empty elements, or device names (c:\\) in the array\n\t// (so also no leading and trailing slashes - it does not distinguish\n\t// relative and absolute paths)\n\tfunction normalizeArray(parts, allowAboveRoot) {\n\t  // if the path tries to go above the root, `up` ends up > 0\n\t  var up = 0;\n\t  for (var i = parts.length - 1; i >= 0; i--) {\n\t    var last = parts[i];\n\t    if (last === '.') {\n\t      parts.splice(i, 1);\n\t    } else if (last === '..') {\n\t      parts.splice(i, 1);\n\t      up++;\n\t    } else if (up) {\n\t      parts.splice(i, 1);\n\t      up--;\n\t    }\n\t  }\n\t\n\t  // if the path is allowed to go above the root, restore leading ..s\n\t  if (allowAboveRoot) {\n\t    for (; up--; up) {\n\t      parts.unshift('..');\n\t    }\n\t  }\n\t\n\t  return parts;\n\t}\n\t\n\t// Split a filename into [root, dir, basename, ext], unix version\n\t// 'root' is just a slash, or nothing.\n\tvar splitPathRe =\n\t    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\n\tvar splitPath = function(filename) {\n\t  return splitPathRe.exec(filename).slice(1);\n\t};\n\t\n\t// path.resolve([from ...], to)\n\t// posix version\n\texports.resolve = function() {\n\t  var resolvedPath = '',\n\t      resolvedAbsolute = false;\n\t\n\t  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n\t    var path = (i >= 0) ? arguments[i] : process.cwd();\n\t\n\t    // Skip empty and invalid entries\n\t    if (typeof path !== 'string') {\n\t      throw new TypeError('Arguments to path.resolve must be strings');\n\t    } else if (!path) {\n\t      continue;\n\t    }\n\t\n\t    resolvedPath = path + '/' + resolvedPath;\n\t    resolvedAbsolute = path.charAt(0) === '/';\n\t  }\n\t\n\t  // At this point the path should be resolved to a full absolute path, but\n\t  // handle relative paths to be safe (might happen when process.cwd() fails)\n\t\n\t  // Normalize the path\n\t  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n\t    return !!p;\n\t  }), !resolvedAbsolute).join('/');\n\t\n\t  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n\t};\n\t\n\t// path.normalize(path)\n\t// posix version\n\texports.normalize = function(path) {\n\t  var isAbsolute = exports.isAbsolute(path),\n\t      trailingSlash = substr(path, -1) === '/';\n\t\n\t  // Normalize the path\n\t  path = normalizeArray(filter(path.split('/'), function(p) {\n\t    return !!p;\n\t  }), !isAbsolute).join('/');\n\t\n\t  if (!path && !isAbsolute) {\n\t    path = '.';\n\t  }\n\t  if (path && trailingSlash) {\n\t    path += '/';\n\t  }\n\t\n\t  return (isAbsolute ? '/' : '') + path;\n\t};\n\t\n\t// posix version\n\texports.isAbsolute = function(path) {\n\t  return path.charAt(0) === '/';\n\t};\n\t\n\t// posix version\n\texports.join = function() {\n\t  var paths = Array.prototype.slice.call(arguments, 0);\n\t  return exports.normalize(filter(paths, function(p, index) {\n\t    if (typeof p !== 'string') {\n\t      throw new TypeError('Arguments to path.join must be strings');\n\t    }\n\t    return p;\n\t  }).join('/'));\n\t};\n\t\n\t\n\t// path.relative(from, to)\n\t// posix version\n\texports.relative = function(from, to) {\n\t  from = exports.resolve(from).substr(1);\n\t  to = exports.resolve(to).substr(1);\n\t\n\t  function trim(arr) {\n\t    var start = 0;\n\t    for (; start < arr.length; start++) {\n\t      if (arr[start] !== '') break;\n\t    }\n\t\n\t    var end = arr.length - 1;\n\t    for (; end >= 0; end--) {\n\t      if (arr[end] !== '') break;\n\t    }\n\t\n\t    if (start > end) return [];\n\t    return arr.slice(start, end - start + 1);\n\t  }\n\t\n\t  var fromParts = trim(from.split('/'));\n\t  var toParts = trim(to.split('/'));\n\t\n\t  var length = Math.min(fromParts.length, toParts.length);\n\t  var samePartsLength = length;\n\t  for (var i = 0; i < length; i++) {\n\t    if (fromParts[i] !== toParts[i]) {\n\t      samePartsLength = i;\n\t      break;\n\t    }\n\t  }\n\t\n\t  var outputParts = [];\n\t  for (var i = samePartsLength; i < fromParts.length; i++) {\n\t    outputParts.push('..');\n\t  }\n\t\n\t  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\t\n\t  return outputParts.join('/');\n\t};\n\t\n\texports.sep = '/';\n\texports.delimiter = ':';\n\t\n\texports.dirname = function(path) {\n\t  var result = splitPath(path),\n\t      root = result[0],\n\t      dir = result[1];\n\t\n\t  if (!root && !dir) {\n\t    // No dirname whatsoever\n\t    return '.';\n\t  }\n\t\n\t  if (dir) {\n\t    // It has a dirname, strip trailing slash\n\t    dir = dir.substr(0, dir.length - 1);\n\t  }\n\t\n\t  return root + dir;\n\t};\n\t\n\t\n\texports.basename = function(path, ext) {\n\t  var f = splitPath(path)[2];\n\t  // TODO: make this comparison case-insensitive on windows?\n\t  if (ext && f.substr(-1 * ext.length) === ext) {\n\t    f = f.substr(0, f.length - ext.length);\n\t  }\n\t  return f;\n\t};\n\t\n\t\n\texports.extname = function(path) {\n\t  return splitPath(path)[3];\n\t};\n\t\n\tfunction filter (xs, f) {\n\t    if (xs.filter) return xs.filter(f);\n\t    var res = [];\n\t    for (var i = 0; i < xs.length; i++) {\n\t        if (f(xs[i], i, xs)) res.push(xs[i]);\n\t    }\n\t    return res;\n\t}\n\t\n\t// String.prototype.substr - negative index don't work in IE8\n\tvar substr = 'ab'.substr(-1) === 'b'\n\t    ? function (str, start, len) { return str.substr(start, len) }\n\t    : function (str, start, len) {\n\t        if (start < 0) start = str.length + start;\n\t        return str.substr(start, len);\n\t    }\n\t;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(4)))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"lodash\");\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"rimraf\");\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"unzip\");\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"temp\");\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"fstream\");\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"archiver\");\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Promise = __webpack_require__(2);\n\tvar _ = __webpack_require__(5);\n\tvar Util = __webpack_require__(12);\n\tvar path = __webpack_require__(3);\n\tvar Saveable_1 = __webpack_require__(14);\n\tvar Sheet = (function (_super) {\n\t    __extends(Sheet, _super);\n\t    function Sheet(workbook, workbookXml, relationshipXml) {\n\t        _super.call(this, null);\n\t        this.workbook = workbook;\n\t        this.workbookXml = workbookXml;\n\t        this.relationshipXml = relationshipXml;\n\t        if (this.workbookXml) {\n\t            this.filename = this.relationshipXml.$.Target;\n\t            this.path = path.join(this.workbook.tempDir, 'xl', this.filename);\n\t            this.id = this.relationshipXml.$.Id;\n\t        }\n\t    }\n\t    Sheet.prototype.load = function () {\n\t        var _this = this;\n\t        return this.xml ?\n\t            Promise.resolve(this.xml) :\n\t            Util.loadXML(this.path)\n\t                .then(function (xml) {\n\t                return _this.xml = xml;\n\t            });\n\t    };\n\t    Sheet.prototype.getName = function () {\n\t        return this.workbookXml.$.name;\n\t    };\n\t    Sheet.prototype.setName = function (name) {\n\t        this.workbookXml.$.name = name;\n\t    };\n\t    Sheet.prototype.create = function () {\n\t        this.addRelationship();\n\t        this.addContentType();\n\t        this.addToWorkbook();\n\t        this.xml = _.cloneDeep(this.workbook.emptySheet.xml);\n\t    };\n\t    Sheet.prototype.copyFrom = function (sheet) {\n\t        this.xml = _.cloneDeep(sheet.xml);\n\t        // delete selections if any\n\t        delete this.xml.worksheet.sheetViews;\n\t    };\n\t    Sheet.prototype.setCellValue = function (rownum_or_ref, colnum, cellvalue, copyCellStyle) {\n\t        var cell = this.getCell(rownum_or_ref, colnum);\n\t        var value = typeof colnum == 'string' ? colnum : cellvalue;\n\t        var from = typeof colnum == 'string' ? cellvalue : copyCellStyle;\n\t        if (cellvalue === undefined || cellvalue === null) {\n\t            var matches = cell.$.r.match(Sheet.refRegex);\n\t            var rownum = parseInt(matches[2]);\n\t            // delete cell\n\t            var row = this.getRowXML(rownum);\n\t            row.c.splice(row.c.indexOf(cell), 1);\n\t        }\n\t        else {\n\t            this.setValue(cell, value);\n\t            if (from !== undefined) {\n\t                cell.$.s = this.getCell(from).$.s;\n\t            }\n\t        }\n\t    };\n\t    Sheet.prototype.setValue = function (cell, cellvalue) {\n\t        if (typeof cellvalue == 'number') {\n\t            // number\n\t            cell.v = [cellvalue];\n\t            delete cell.f;\n\t        }\n\t        else if (cellvalue[0] == '=') {\n\t            // function\n\t            cell.f = [cellvalue.substr(1).replace(/;/g, ',')];\n\t        }\n\t        else {\n\t            // assume string\n\t            cell.v = [this.workbook.sharedStrings.getIndex(cellvalue)];\n\t            cell.$.t = 's';\n\t            // reset cell type\n\t            delete cell.$.s;\n\t        }\n\t        return cell;\n\t    };\n\t    Sheet.prototype.getCellValue = function (r, colnum) {\n\t        var cell = this.getCell(r, colnum);\n\t        if (cell.$.t == 's') {\n\t            // Sharedstring\n\t            return this.workbook.sharedStrings.getString(cell.v[0]);\n\t        }\n\t        else if (cell.f && cell.v) {\n\t            var value = cell.v[0].hasOwnProperty('_') ? cell.v[0]._ : cell.v[0];\n\t            return (value != '') ? value : undefined;\n\t        }\n\t        else if (cell.f) {\n\t            return '=' + cell.f[0];\n\t        }\n\t        else {\n\t            return cell.hasOwnProperty('v') ? cell.v[0] : undefined;\n\t        }\n\t    };\n\t    Sheet.prototype.getCellFunction = function (r, colnum) {\n\t        var cell = this.getCell(r, colnum);\n\t        if (cell === undefined || cell === null || !cell.f)\n\t            return undefined;\n\t        var func = cell.f[0].hasOwnProperty('_') ? cell.f[0]._ : cell.f[0];\n\t        return '=' + func;\n\t    };\n\t    Sheet.prototype.getCell = function (rownum_or_ref, colnum) {\n\t        var rownum;\n\t        var cellId;\n\t        if (typeof rownum_or_ref == 'string') {\n\t            var matches = rownum_or_ref.match(Sheet.refRegex);\n\t            rownum = parseInt(matches[2]);\n\t            //colnum = Sheet.excelColumnToInt(matches[1]);\n\t            cellId = rownum_or_ref;\n\t        }\n\t        else if (typeof rownum_or_ref == 'number') {\n\t            rownum = rownum_or_ref;\n\t            //colnum = colnum;\n\t            cellId = Sheet.intToExcelColumn(colnum) + rownum;\n\t        }\n\t        else {\n\t            return rownum_or_ref;\n\t        }\n\t        var row = this.getRowXML(rownum);\n\t        var cell = _.find(row.c, function (cell) {\n\t            return cell.$.r == cellId;\n\t        });\n\t        if (cell === undefined) {\n\t            cell = { $: { r: cellId } };\n\t            row.c = row.c || [];\n\t            row.c.push(cell);\n\t            row.c.sort(function (a, b) {\n\t                return Sheet.excelColumnToInt(a.$.r) - Sheet.excelColumnToInt(b.$.r);\n\t            });\n\t        }\n\t        return cell;\n\t    };\n\t    Sheet.prototype.getRow = function (r) {\n\t        var _this = this;\n\t        var row = r;\n\t        if (typeof r == 'number') {\n\t            row = this.getRowXML(r);\n\t        }\n\t        if (!row.c)\n\t            return undefined;\n\t        var result = [];\n\t        row.c.forEach(function (cell) {\n\t            result[Sheet.excelColumnToInt(cell.$.r) - 1] = _this.getCellValue(cell);\n\t        });\n\t        return result;\n\t    };\n\t    Sheet.prototype.setRow = function (r, values) {\n\t        var _this = this;\n\t        var row = r;\n\t        if (typeof r == 'number') {\n\t            row = this.getRowXML(r);\n\t        }\n\t        var rownum = row.$.r;\n\t        row.c = _.compact(values.map(function (value, index) {\n\t            if (!value)\n\t                return undefined;\n\t            var cellId = Sheet.intToExcelColumn(index + 1) + rownum;\n\t            return _this.setValue({ $: { r: cellId } }, value);\n\t        }));\n\t    };\n\t    Sheet.prototype.appendRow = function (values) {\n\t        var row = this.getRowXML(this.getLastRowNumber() + 1);\n\t        this.setRow(row, values);\n\t        return row.$.r;\n\t    };\n\t    Sheet.prototype.getLastRowNumber = function () {\n\t        if (this.xml.worksheet.sheetData && this.xml.worksheet.sheetData[0].row) {\n\t            // Remove empty rows\n\t            this.xml.worksheet.sheetData[0].row = this.xml.worksheet.sheetData[0].row.filter(function (row) {\n\t                return row.c && row.c.length > 0;\n\t            });\n\t            return +_.last(this.xml.worksheet.sheetData[0].row).$.r || 0;\n\t        }\n\t        else {\n\t            return 0;\n\t        }\n\t    };\n\t    Sheet.prototype.getRowXML = function (rownum) {\n\t        if (!this.xml.worksheet.sheetData) {\n\t            this.xml.worksheet.sheetData = [];\n\t        }\n\t        if (!this.xml.worksheet.sheetData[0]) {\n\t            this.xml.worksheet.sheetData[0] = { row: [] };\n\t        }\n\t        var rows = this.xml.worksheet.sheetData[0].row;\n\t        var row = _.find(rows, function (r) {\n\t            return r.$.r == rownum;\n\t        });\n\t        if (!row) {\n\t            row = { $: { r: rownum } };\n\t            rows.push(row);\n\t            rows.sort(function (row1, row2) {\n\t                return row1.$.r - row2.$.r;\n\t            });\n\t        }\n\t        return row;\n\t    };\n\t    Sheet.prototype.toJSON = function () {\n\t        var _this = this;\n\t        var keys = this.getRow(1);\n\t        var rows = this.xml.worksheet.sheetData[0].row.slice(1);\n\t        return rows.map(function (row) {\n\t            return _.zipObject(keys, _this.getRow(row));\n\t        });\n\t    };\n\t    Sheet.prototype.addRelationship = function () {\n\t        var relationships = this.workbook.getXML('xl/_rels/workbook.xml.rels');\n\t        this.id = 'rId' + (relationships.Relationships.Relationship.length + 1);\n\t        this.filename = 'worksheets/kexcel_' + this.id + '.xml';\n\t        this.relationshipXml = {\n\t            '$': {\n\t                Id: this.id,\n\t                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet',\n\t                Target: this.filename\n\t            }\n\t        };\n\t        relationships.Relationships.Relationship.push(this.relationshipXml);\n\t    };\n\t    Sheet.prototype.addContentType = function () {\n\t        var contentTypes = this.workbook.getXML('[Content_Types].xml');\n\t        this.path = path.join(this.workbook.tempDir, 'xl', 'worksheets', 'kexcel_' + this.id + '.xml');\n\t        contentTypes.Types.Override.push({\n\t            '$': {\n\t                PartName: '/xl/' + this.filename,\n\t                ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml'\n\t            }\n\t        });\n\t    };\n\t    Sheet.prototype.addToWorkbook = function () {\n\t        var wbxml = this.workbook.getXML('xl/workbook.xml');\n\t        var sheets = wbxml.workbook.sheets[0].sheet;\n\t        this.workbookXml = { '$': { name: 'Sheet' + (sheets.length + 1), sheetId: sheets.length + 1, 'r:id': this.id } };\n\t        sheets.push(this.workbookXml);\n\t    };\n\t    Sheet.intToExcelColumn = function (col) {\n\t        var result = '';\n\t        var mod;\n\t        while (col > 0) {\n\t            mod = (col - 1) % 26;\n\t            result = String.fromCharCode(65 + mod) + result;\n\t            col = Math.floor((col - mod) / 26);\n\t        }\n\t        return result;\n\t    };\n\t    Sheet.excelColumnToInt = function (ref) {\n\t        var number = 0;\n\t        var pow = 1;\n\t        for (var i = ref.length - 1; i >= 0; i--) {\n\t            var c = ref.charCodeAt(i) - 64;\n\t            if (c > 0 && c < 27) {\n\t                number += (c) * pow;\n\t                pow *= 26;\n\t            }\n\t        }\n\t        return number;\n\t    };\n\t    Sheet.refRegex = /^([A-Z]+)(\\d+)$/i;\n\t    return Sheet;\n\t}(Saveable_1.Saveable));\n\texports.Sheet = Sheet;\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar fs = __webpack_require__(1);\n\tvar xml2js = __webpack_require__(13);\n\tvar Promise = __webpack_require__(2);\n\tvar parseString = Promise.promisify(xml2js.parseString);\n\tvar readFile = Promise.promisify(fs.readFile);\n\tvar writeFile = Promise.promisify(fs.writeFile);\n\tvar builder = new xml2js.Builder();\n\tfunction parseXML(input) {\n\t    return parseString(input);\n\t}\n\texports.parseXML = parseXML;\n\tfunction loadXML(path) {\n\t    return readFile(path).then(function (buffer) {\n\t        return parseString(buffer.toString());\n\t    });\n\t}\n\texports.loadXML = loadXML;\n\tfunction saveXML(xmlobj, path) {\n\t    var contents = builder.buildObject(xmlobj);\n\t    return writeFile(path, contents).thenReturn(path);\n\t}\n\texports.saveXML = saveXML;\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\tmodule.exports = require(\"xml2js\");\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Util = __webpack_require__(12);\n\tvar Saveable = (function () {\n\t    function Saveable(path) {\n\t        this.path = path;\n\t    }\n\t    Saveable.prototype.save = function () {\n\t        return Util.saveXML(this.xml, this.path);\n\t    };\n\t    return Saveable;\n\t}());\n\texports.Saveable = Saveable;\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Promise = __webpack_require__(2);\n\tvar Util = __webpack_require__(12);\n\tvar Saveable_1 = __webpack_require__(14);\n\tvar XMLFile = (function (_super) {\n\t    __extends(XMLFile, _super);\n\t    function XMLFile(path) {\n\t        _super.call(this, path);\n\t        this.path = path;\n\t    }\n\t    XMLFile.prototype.load = function () {\n\t        var _this = this;\n\t        return this.xml ? Promise.resolve(this.xml) : Util.loadXML(this.path).then(function (xml) {\n\t            return _this.xml = xml;\n\t        });\n\t    };\n\t    return XMLFile;\n\t}(Saveable_1.Saveable));\n\texports.XMLFile = XMLFile;\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Promise = __webpack_require__(2);\n\tvar _ = __webpack_require__(5);\n\tvar Util = __webpack_require__(12);\n\tvar Saveable_1 = __webpack_require__(14);\n\tvar SharedStrings = (function (_super) {\n\t    __extends(SharedStrings, _super);\n\t    function SharedStrings(path, workbook) {\n\t        _super.call(this, path);\n\t        this.path = path;\n\t        this.workbook = workbook;\n\t        this.cache = {};\n\t    }\n\t    SharedStrings.prototype.load = function () {\n\t        var _this = this;\n\t        return this.xml ?\n\t            Promise.resolve(this.xml) :\n\t            Util.loadXML(this.path).then(function (xml) {\n\t                return _this.xml = xml;\n\t            }).catch(function () {\n\t                return Promise.all([\n\t                    _this.addRelationship(),\n\t                    _this.addContentType()\n\t                ]).then(function () {\n\t                    return Util.parseXML('<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"0\" uniqueCount=\"0\"><si/></sst>');\n\t                }).then(function (xml) {\n\t                    _this.xml = xml;\n\t                });\n\t            }).finally(function () {\n\t                _this.xml.sst.si.forEach(function (si, index) {\n\t                    if (si.t) {\n\t                        _this.cache[si.t[0]] = index;\n\t                    }\n\t                    else {\n\t                    }\n\t                });\n\t                return _this.xml;\n\t            });\n\t    };\n\t    SharedStrings.prototype.getIndex = function (s) {\n\t        return this.cache[s] || this.storeString(s);\n\t    };\n\t    SharedStrings.prototype.getString = function (n) {\n\t        var sxml = this.xml.sst.si[n];\n\t        if (!sxml)\n\t            return undefined;\n\t        return sxml.hasOwnProperty('t') ? sxml.t[0] : _.compact(sxml.r.map(function (d) {\n\t            return d.t[0];\n\t        })).join('');\n\t    };\n\t    SharedStrings.prototype.storeString = function (s) {\n\t        var index = this.xml.sst.si.push({ t: [s] }) - 1;\n\t        this.cache[s] = index;\n\t        return index;\n\t    };\n\t    SharedStrings.prototype.addRelationship = function () {\n\t        var relationships = this.workbook.getXML('xl/_rels/workbook.xml.rels');\n\t        relationships.Relationships.Relationship.push({\n\t            '$': {\n\t                Id: 'rId1ss',\n\t                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings',\n\t                Target: 'sharedStrings.xml'\n\t            }\n\t        });\n\t    };\n\t    SharedStrings.prototype.addContentType = function () {\n\t        var contentTypes = this.workbook.getXML('[Content_Types].xml');\n\t        contentTypes.Types.Override.push({\n\t            '$': {\n\t                PartName: '/xl/sharedStrings.xml',\n\t                ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml'\n\t            }\n\t        });\n\t    };\n\t    return SharedStrings;\n\t}(Saveable_1.Saveable));\n\texports.SharedStrings = SharedStrings;\n\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** kexcel.bundle.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 83b325e2d71b773ff134\n **/","import {WriteStream} from \"fs\";\nconst fs = require('fs');\nimport * as Promise from \"bluebird\";\nimport * as path from \"path\";\nimport * as _ from \"lodash\";\nimport * as rimraf from \"rimraf\";\n\nconst unzip = require('unzip');\nvar mkTempDir:any = Promise.promisify(require('temp').mkdir);\nvar fstream = require('fstream');\nimport * as archiver from \"archiver\";\n\nimport {ReadStream} from \"fs\";\nimport {Saveable} from \"./Saveable\";\nimport {Sheet} from \"./Sheet\";\nimport {XMLFile} from \"./XMLFile\";\nimport {SharedStrings} from \"./SharedStrings\";\n\n/**\n * Main class for KExcel. Use .new() and .open(file | stream) to open an .xlsx file.\n */\nexport class Workbook {\n\n    /**\n     * These files are automatically loaded into files[]\n     * @type {string[]}\n     */\n    private static autoload:Array<string> = [\n        'xl/workbook.xml',\n        'xl/_rels/workbook.xml.rels',\n        '[Content_Types].xml'\n    ];\n\n    /**\n     * Temporary directory (created using the 'temp' library)\n     */\n    public tempDir:string;\n\n    /**\n     * Dictionary which holds pointers to files.\n     * @type {{}}\n     */\n    private files:{ [path: string]: Saveable; } = {};\n\n    /**\n     * The array of sheets in this workbook.\n     * @type {Array}\n     */\n    public sheets:Sheet[] = [];\n\n    /**\n     * Template for an empty sheet\n     */\n    public emptySheet:XMLFile;\n\n    /**\n     * Manage SharedStrings in the workbook.\n     */\n    public sharedStrings:SharedStrings;\n\n    /**\n     * Holds the path of the source file (if opened from a file)\n     */\n    private filename:string;\n\n    /**\n     * The source stream (from another stream or file)\n     */\n    protected source:ReadStream;\n\n    constructor(input:any) {\n        if (typeof input == 'string') {\n            this.filename = input;\n            this.source = fs.createReadStream(input);\n        } else {\n            this.source = input;\n        }\n    }\n\n    /**\n     * Creates an empty workbook\n     * @returns {Promise<Workbook>}\n     */\n    public static new():Promise<Workbook> {\n        return Workbook.open(path.join(__dirname, '..', 'templates', 'empty.xlsx'));\n    }\n\n    /**\n     * Opens an existing .xlsx file\n     * @param input\n     * @returns {Promise<Workbook>}\n     */\n    public static open(input:ReadStream | string):Promise<Workbook> {\n        var workbook = new Workbook(input);\n        return workbook.init();\n    }\n\n    protected init():Promise<Workbook> {\n        return this.extract().then(() => {\n            var p:Array<Promise<void>> = Workbook.autoload.map(filepath => {\n                var xmlfile = new XMLFile(path.join(this.tempDir, filepath));\n                this.files[filepath] = xmlfile;\n                return xmlfile.load();\n            });\n            return Promise.all(p);\n        }).then(() => {\n            this.emptySheet = new XMLFile(path.join(__dirname, '..', 'templates', 'emptysheet.xml'));\n            return this.emptySheet.load();\n        }).then(() => {\n            return Promise.all([this.initSharedStrings(), this.initSheets()])\n        }).thenReturn(this);\n\n    }\n\n    protected initSharedStrings():Promise<void> {\n        this.sharedStrings = new SharedStrings(path.join(this.tempDir, 'xl', 'sharedStrings.xml'), this);\n        return this.sharedStrings.load();\n    }\n\n    protected initSheets():Promise<void[]> {\n        var wbxml = this.getXML('xl/workbook.xml');\n        var relxml = this.getXML('xl/_rels/workbook.xml.rels');\n        var p:Array<Promise<void>> = _.map<any, Promise<void>>(wbxml.workbook.sheets[0].sheet, sheetXml => {\n            var r:any = _.find<any>(relxml.Relationships.Relationship, rel => {\n                return rel.$.Id == sheetXml.$['r:id'];\n            });\n            var sheet = new Sheet(this, sheetXml, r);\n            this.files[sheet.filename] = sheet;\n            this.sheets.push(sheet);\n            return sheet.load();\n        });\n        return Promise.all(p);\n    }\n\n    private extract():Promise<void> {\n        if ( this.filename && !fs.existsSync(this.filename)) return Promise.reject(this.filename + ' not found.');\n        return mkTempDir('xlsx').then(tempDir => {\n            this.tempDir = tempDir;\n            return new Promise((resolve, reject) => {\n                var parser = unzip.Parse();\n                var writer = fstream.Writer(tempDir);\n                var outstream = this.source.pipe(parser).pipe(writer);\n\n                outstream.on('close', () => {\n                    resolve(this);\n                });\n\n                parser.on('error', error => {\n                    reject(error);\n                });\n\n            });\n        });\n    }\n\n    /**\n     * Returns the xml object for the requested file\n     * @param filePath\n     * @returns {any}\n     */\n    public getXML(filePath:string):any {\n        return this.files[filePath].xml;\n    }\n\n    /**\n     * Creates a new sheet in the workbook\n     * @param name Optionally set the name of the sheet\n     * @returns {Sheet}\n     */\n    public createSheet(name?:string):Sheet {\n        var sheet = new Sheet(this);\n        sheet.create();\n        this.sheets.push(sheet);\n        this.files[sheet.filename] = sheet;\n        if (name != undefined) {\n            sheet.setName(name);\n        }\n        return sheet;\n    }\n\n    /**\n     * Get sheet at the specified index\n     * @param index\n     */\n    public getSheet(index:number):Sheet;\n    public getSheet(name:string):Sheet;\n    public getSheet(input:any):Sheet {\n        if (typeof input == 'number') return this.sheets[input];\n\n        return _.find<Sheet>(this.sheets, sheet => {\n            return sheet.getName() == input;\n        });\n    }\n\n    public pipe<T extends WriteStream>(destination:T, options?:{ end?: boolean }):T {\n        var archive:any = archiver('zip');\n        Promise.all(_.map(this.files, function (file:XMLFile) {\n            return file.save();\n        })).then(() => {\n            return this.sharedStrings.save();\n        }).then(() => {\n            archive.on('finish', () => {\n                // Async version somehow doesn't work?\n                /*rimraf(this.tempDir, function(error){\n                 console.log('errr');\n                 console.log(error);\n                 });*/\n                rimraf.sync(this.tempDir);\n            });\n            archive.pipe(destination, options);\n            archive.bulk([\n                {expand: true, cwd: this.tempDir, src: ['**', '_rels/.rels'], data: {date: new Date()}}\n            ]);\n\n            archive.finalize();\n        });\n        return archive;\n    }\n\n}\n\nmodule.exports = {\n    Workbook,\n    open: Workbook.open,\n    'new': Workbook.new\n};\n\n\n/** WEBPACK FOOTER **\n ** ./ts/Workbook.ts\n **/","module.exports = require(\"fs\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fs\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = require(\"bluebird\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"bluebird\"\n ** module id = 2\n ** module chunks = 0\n **/","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/path-browserify/index.js\n ** module id = 3\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 4\n ** module chunks = 0\n **/","module.exports = require(\"lodash\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"lodash\"\n ** module id = 5\n ** module chunks = 0\n **/","module.exports = require(\"rimraf\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"rimraf\"\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = require(\"unzip\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"unzip\"\n ** module id = 7\n ** module chunks = 0\n **/","module.exports = require(\"temp\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"temp\"\n ** module id = 8\n ** module chunks = 0\n **/","module.exports = require(\"fstream\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"fstream\"\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = require(\"archiver\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"archiver\"\n ** module id = 10\n ** module chunks = 0\n **/","import * as Promise from \"bluebird\";\nimport * as _ from \"lodash\";\n\nimport * as Util from \"./Util\";\nimport * as K from \"..\"\n\nimport path = require('path');\nimport {Saveable} from \"./Saveable\";\nimport {Workbook} from \"./Workbook\";\n\nexport class Sheet extends Saveable {\n\n    protected id:string;\n    public xml:any;\n    public filename:string;\n    private static refRegex:RegExp = /^([A-Z]+)(\\d+)$/i;\n\n    constructor(protected workbook:Workbook, protected workbookXml?:any, protected relationshipXml?:any) {\n        super(null);\n        if (this.workbookXml) {\n            this.filename = this.relationshipXml.$.Target;\n            this.path = path.join(this.workbook.tempDir, 'xl', this.filename);\n            this.id = this.relationshipXml.$.Id;\n        }\n    }\n\n    public load():Promise<any> {\n        return this.xml ?\n            Promise.resolve<any>(this.xml) :\n            Util.loadXML(this.path)\n                .then(xml => {\n                    return this.xml = xml;\n                });\n    }\n\n    public getName():string {\n        return this.workbookXml.$.name;\n    }\n\n    public setName(name:string):void {\n        this.workbookXml.$.name = name;\n    }\n\n    public create():void {\n        this.addRelationship();\n        this.addContentType();\n        this.addToWorkbook();\n        this.xml = _.cloneDeep(this.workbook.emptySheet.xml);\n    }\n\n    public copyFrom(sheet:Sheet) {\n        this.xml = _.cloneDeep(sheet.xml);\n        // delete selections if any\n        delete this.xml.worksheet.sheetViews;\n    }\n\n    public setCellValue(rownum:number, colnum:number, cellvalue:string | number, copyCellStyle?:string);\n    public setCellValue(ref:string, cellvalue:string | number, copyCellStyle?:string);\n    public setCellValue(rownum_or_ref:any, colnum:number, cellvalue:string | number, copyCellStyle?:string):void {\n        var cell = this.getCell(rownum_or_ref, colnum);\n        var value:string|number = typeof colnum == 'string' ? colnum : cellvalue;\n        var from:any = typeof colnum == 'string' ? cellvalue : copyCellStyle;\n        if (cellvalue === undefined || cellvalue === null) {\n            var matches = cell.$.r.match(Sheet.refRegex);\n            var rownum = parseInt( matches[2] );\n            // delete cell\n            var row:K.Row = this.getRowXML(rownum);\n            row.c.splice(row.c.indexOf(cell), 1);\n        } else {\n            this.setValue(cell, value);\n            if (from !== undefined) {\n                cell.$.s = this.getCell(from).$.s;\n            }\n        }\n    }\n\n\n    private setValue(cell:K.Cell, cellvalue:any):K.Cell {\n\n        if (typeof cellvalue == 'number') {\n            // number\n            cell.v = [cellvalue];\n            delete cell.f;\n        } else if (cellvalue[0] == '=') {\n            // function\n            cell.f = [cellvalue.substr(1).replace(/;/g, ',')];\n        } else {\n            // assume string\n            cell.v = [this.workbook.sharedStrings.getIndex(cellvalue)];\n            cell.$.t = 's';\n\n            // reset cell type\n            delete cell.$.s;\n        }\n        return cell;\n    }\n\n    public getCellValue(rownum:number, colnum:number):string | number;\n    public getCellValue(ref:string):string | number;\n    public getCellValue(cell:K.Cell):string | number;\n    public getCellValue(r:any, colnum?:number):string | number {\n        var cell:K.Cell = this.getCell(r,colnum);\n\n        if (cell.$.t == 's') {\n            // Sharedstring\n            return this.workbook.sharedStrings.getString(cell.v[0]);\n        } else if (cell.f && cell.v) {\n            var value = cell.v[0].hasOwnProperty('_') ? cell.v[0]._ : cell.v[0];\n            return (value != '') ? value : undefined;\n        } else if (cell.f) {\n            return '=' + cell.f[0];\n        } else {\n            return cell.hasOwnProperty('v') ? cell.v[0] : undefined;\n        }\n    }\n\n    public getCellFunction(rownum:number, colnum:number):string | number;\n    public getCellFunction(ref:string):string | number;\n    public getCellFunction(cell:K.Cell):string | number;\n    public getCellFunction(r:any, colnum?:number):string {\n        var cell:K.Cell = this.getCell(r,colnum);\n        if (cell === undefined || cell === null || !cell.f) return undefined;\n\n        var func = cell.f[0].hasOwnProperty('_') ? cell.f[0]._ : cell.f[0];\n\n        return  '=' + func;\n    }\n\n    private getCell(rownum:number, colnum:number);\n    private getCell(ref:string);\n    private getCell(cell:K.Cell);\n    private getCell(rownum_or_ref:any, colnum?:number):K.Cell {\n        var rownum:number;\n        var cellId:string;\n        if (typeof rownum_or_ref == 'string') {\n            var matches = rownum_or_ref.match(Sheet.refRegex);\n            rownum = parseInt( matches[2] );\n            //colnum = Sheet.excelColumnToInt(matches[1]);\n            cellId = rownum_or_ref;\n        } else if (typeof rownum_or_ref == 'number') {\n            rownum = rownum_or_ref;\n            //colnum = colnum;\n            cellId = Sheet.intToExcelColumn(colnum) + rownum;\n        } else {\n            return rownum_or_ref;\n        }\n        var row:K.Row = this.getRowXML(rownum);\n        var cell = _.find(row.c, cell => {\n            return cell.$.r == cellId;\n        });\n\n        if (cell === undefined) {\n            cell = {$: {r: cellId}};\n            row.c = row.c || [];\n            row.c.push(cell);\n\n            row.c.sort((a, b) => {\n                return Sheet.excelColumnToInt(a.$.r) - Sheet.excelColumnToInt(b.$.r);\n            });\n        }\n\n        return cell;\n    }\n\n    public getRow(rownum:number):Array<string | number>;\n    public getRow(row:K.Row):Array<string | number>\n    public getRow(r:any):Array<string | number> {\n        var row:K.Row = r;\n        if (typeof r == 'number') {\n            row = this.getRowXML(r);\n        }\n\n        if (!row.c) return undefined;\n\n        var result:Array<string | number> = [];\n\n        row.c.forEach((cell) => {\n            result[Sheet.excelColumnToInt(cell.$.r) - 1] = this.getCellValue(cell);\n        });\n        return result;\n\n    }\n\n    public setRow(rownum:number, values:Array<string | number>):void;\n    public setRow(row:K.Row, values:Array<string | number>):void;\n    public setRow(r:any, values:Array<string | number>):void {\n        var row:K.Row = r;\n        if (typeof r == 'number') {\n            row = this.getRowXML(r);\n        }\n\n        var rownum = row.$.r;\n\n        row.c = _.compact(values.map((value, index) => {\n            if (!value) return undefined;\n            var cellId = Sheet.intToExcelColumn(index + 1) + rownum;\n            return this.setValue({$: {r: cellId}}, value);\n        }));\n\n    }\n\n    public appendRow(values:Array<string | number>):number {\n        var row:K.Row = this.getRowXML(this.getLastRowNumber() + 1);\n        this.setRow(row, values);\n        return row.$.r;\n    }\n\n\n    public getLastRowNumber():number {\n        if (this.xml.worksheet.sheetData && this.xml.worksheet.sheetData[0].row) {\n            // Remove empty rows\n            this.xml.worksheet.sheetData[0].row = this.xml.worksheet.sheetData[0].row.filter(function(row){\n                return row.c && row.c.length > 0;\n            });\n            return +_.last<K.Row>(this.xml.worksheet.sheetData[0].row).$.r || 0;\n        } else {\n            return 0;\n        }\n\n    }\n\n    private getRowXML(rownum:number):K.Row {\n        if (!this.xml.worksheet.sheetData) {\n            this.xml.worksheet.sheetData = [];\n        }\n\n        if (!this.xml.worksheet.sheetData[0]) {\n            this.xml.worksheet.sheetData[0] = {row: []};\n        }\n\n        var rows:Array<K.Row> = this.xml.worksheet.sheetData[0].row;\n        var row:K.Row = _.find<K.Row>(rows, r => {\n            return r.$.r == rownum\n        });\n\n        if (!row) {\n            row = {$: {r: rownum}};\n            rows.push(row);\n            rows.sort((row1, row2) => {\n                return row1.$.r - row2.$.r;\n            });\n        }\n\n        return row;\n\n    }\n\n    public toJSON():{} {\n        var keys:Array<string | number> = this.getRow(1);\n        var rows:Array<K.Row> = this.xml.worksheet.sheetData[0].row.slice(1);\n        return rows.map(row => {\n            return _.zipObject(keys, this.getRow(row));\n        });\n    }\n\n    protected addRelationship():void {\n        var relationships = this.workbook.getXML('xl/_rels/workbook.xml.rels');\n        this.id = 'rId' + (relationships.Relationships.Relationship.length + 1);\n        this.filename = 'worksheets/kexcel_' + this.id + '.xml';\n\n        this.relationshipXml = {\n            '$': {\n                Id: this.id,\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet',\n                Target: this.filename\n            }\n        };\n        relationships.Relationships.Relationship.push(this.relationshipXml);\n\n    }\n\n    protected addContentType():void {\n        var contentTypes = this.workbook.getXML('[Content_Types].xml');\n        this.path = path.join(this.workbook.tempDir, 'xl', 'worksheets', 'kexcel_' + this.id + '.xml');\n        contentTypes.Types.Override.push({\n            '$': {\n                PartName: '/xl/' + this.filename,\n                ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml'\n            }\n        });\n    }\n\n    protected addToWorkbook():void {\n        var wbxml = this.workbook.getXML('xl/workbook.xml');\n        var sheets = wbxml.workbook.sheets[0].sheet;\n        this.workbookXml = {'$': {name: 'Sheet' + (sheets.length + 1), sheetId: sheets.length + 1, 'r:id': this.id}};\n        sheets.push(this.workbookXml);\n    }\n\n    public static intToExcelColumn(col:number):string {\n        var result = '';\n\n        var mod;\n\n        while (col > 0) {\n            mod = (col - 1) % 26;\n            result = String.fromCharCode(65 + mod) + result;\n            col = Math.floor((col - mod) / 26);\n        }\n\n        return result;\n    }\n\n    public static excelColumnToInt(ref:string):number {\n        var number = 0;\n        var pow = 1;\n        for (var i = ref.length - 1; i >= 0; i--) {\n            var c = ref.charCodeAt(i) - 64;\n            if (c > 0 && c < 27) {\n                number += (c) * pow;\n                pow *= 26;\n            }\n        }\n\n        return number;\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ts/Sheet.ts\n **/","import * as fs from \"fs\";\nimport * as xml2js from \"xml2js\";\nimport * as Promise from \"bluebird\";\nimport Workbook = require('./Workbook');\n\nvar parseString:any = Promise.promisify(xml2js.parseString);\nvar readFile:any = Promise.promisify(fs.readFile);\nvar writeFile:any = Promise.promisify(fs.writeFile);\nvar builder = new xml2js.Builder();\n\nexport function parseXML(input:string):Promise<{}> {\n    return parseString(input);\n}\n\nexport function loadXML(path:string):Promise<{}> {\n    return readFile(path).then(buffer => {\n        return parseString(buffer.toString());\n    });\n}\n\nexport function saveXML(xmlobj:{}, path:string):Promise<string> {\n    var contents = builder.buildObject(xmlobj);\n    return writeFile(path, contents).thenReturn(path);\n}\n\n\n/** WEBPACK FOOTER **\n ** ./ts/Util.ts\n **/","module.exports = require(\"xml2js\");\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"xml2js\"\n ** module id = 13\n ** module chunks = 0\n **/","import * as Util from \"./Util\";\nimport Workbook = require('./Workbook');\nimport * as Promise from \"bluebird\";\n\nexport abstract class Saveable {\n\n    public xml:any;\n\n    constructor(protected path:string) {\n    }\n\n    public save():Promise<string> {\n        return Util.saveXML(this.xml, this.path);\n    }\n\n    public abstract load():Promise<void>;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ts/Saveable.ts\n **/","import * as Promise from \"bluebird\";\nimport * as Util from \"./Util\";\nimport {Saveable} from \"./Saveable\";\n\nexport class XMLFile extends Saveable {\n    public xml:any;\n\n    constructor(protected path:string) {\n        super(path);\n    }\n\n    public load():Promise<void> {\n        return this.xml ? Promise.resolve<any>(this.xml) : Util.loadXML(this.path).then(xml => {\n            return this.xml = xml;\n        });\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ts/XMLFile.ts\n **/","import * as Promise from \"bluebird\";\nimport * as _ from \"lodash\";\n\nimport * as Util from \"./Util\";\n\nimport path = require('path');\nimport {Saveable} from \"./Saveable\";\nimport {Workbook} from \"./Workbook\";\n\ninterface SharedString {\n    t?: Array<string>;\n    r?: Array<FormattedStrings>;\n}\n\ninterface FormattedStrings {\n    t: any;\n}\n\nexport class SharedStrings extends Saveable {\n    public xml:any;\n    private cache:{ [s: string]: number; } = {};\n\n    constructor(protected path:string, protected workbook:Workbook) {\n        super(path);\n    }\n\n    public load():Promise<any> {\n        return this.xml ?\n            Promise.resolve(this.xml) :\n            Util.loadXML(this.path).then(xml => {\n                return this.xml = xml;\n            }).catch(() => {\n                return Promise.all([\n                    this.addRelationship(),\n                    this.addContentType()\n                ]).then(() => {\n                    return Util.parseXML('<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\" count=\"0\" uniqueCount=\"0\"><si/></sst>');\n                }).then(xml => {\n                    this.xml = xml;\n                });\n            }).finally(() => {\n                this.xml.sst.si.forEach((si, index) => {\n                    if (si.t) {\n                        this.cache[si.t[0]] = index;\n                    } else {\n                        // don't cache strange strings.\n                    }\n                });\n                return this.xml;\n            });\n    }\n\n    public getIndex(s:string):number {\n        return this.cache[s] || this.storeString(s);\n    }\n\n    public getString(n:number):string {\n        var sxml:SharedString = this.xml.sst.si[n];\n        if (!sxml) return undefined;\n\n        return sxml.hasOwnProperty('t') ? sxml.t[0] : _.compact(sxml.r.map((d) => {\n            return d.t[0];\n        })).join('');\n    }\n\n    private storeString(s):number {\n        var index = this.xml.sst.si.push({t: [s]}) - 1;\n        this.cache[s] = index;\n        return index;\n    }\n\n    protected addRelationship():void {\n        var relationships = this.workbook.getXML('xl/_rels/workbook.xml.rels');\n        relationships.Relationships.Relationship.push({\n            '$': {\n                Id: 'rId1ss',\n                Type: 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings',\n                Target: 'sharedStrings.xml'\n            }\n        });\n    }\n\n    protected addContentType():void {\n        var contentTypes = this.workbook.getXML('[Content_Types].xml');\n        contentTypes.Types.Override.push({\n            '$': {\n                PartName: '/xl/sharedStrings.xml',\n                ContentType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sharedStrings+xml'\n            }\n        });\n    }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ts/SharedStrings.ts\n **/"],"sourceRoot":""}